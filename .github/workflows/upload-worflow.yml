name: Process Issue File

on:
  issues:
    types:
      - labeled

jobs:
  process-file:
    if: contains(github.event.issue.labels.*.name, 'approved') 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Author and Category
        id: extract_info
        run: |
          # Extract Author
          AUTHOR=$(echo "${{ github.event.issue.body }}" | sed -n 's/^### Author\s*\(.*\)/\1/p')
          echo "Extracted Author: $AUTHOR"

          # Extract Category
          CATEGORY=$(echo "${{ github.event.issue.body }}" | sed -n 's/^### Category\s*\(.*\)/\1/p')
          echo "Extracted Category: $CATEGORY"

          # Extract Zip File URL
          ZIP_URL=$(echo "${{ github.event.issue.body }}" | grep -oP 'https://github\.com/[^/]+/[^/]+/files/\d+/[^ ]+\.zip')
          if [ -z "$ZIP_URL" ]; then
            echo "No .zip file found in the comment."
            exit 1
          fi

          # Download the file
          curl -L -o uploaded_file.zip "$ZIP_URL"
          echo "File downloaded: $(ls -l uploaded_file.zip)"

          # Unzip the file
          unzip uploaded_file.zip -d ./extracted_files/
          echo "Files extracted: $(ls -l ./extracted_files/)"

          # Find the .json file in the extracted files
          JSON_FILE=$(find ./extracted_files/ -name "*.json" | head -n 1)
          
          if [ -z "$JSON_FILE" ]; then
            echo "No .json file found in the extracted files."
            exit 1
          fi

          echo "Found .json file: $JSON_FILE"
          
          # Update Menu
          python update_menu.py --author $AUTHOR --category "$CATEGORY" --file "$JSON_FILE"
          
          echo "Updated Menu"

      - name: Commit and push file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add file from Issue #${{ github.event.issue.number }} by ${{ steps.extract_info.outputs.author }} (Category: ${{ steps.extract_info.outputs.category }})"
          git push